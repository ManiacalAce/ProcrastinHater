<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
	

	  <ControlTemplate x:Key="BigCheckTemplate" TargetType="{x:Type CheckBox}">
	    <BulletDecorator Background="Transparent">
	      <BulletDecorator.Bullet>
	        <Border x:Name="Border"
	                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
	
	
	          <Grid>
	          	<Grid.Resources>
	          		<Style TargetType="Path">
	          			<Setter Property="Width" Value="55"/>
	          			<Setter Property="Height" Value="55"/>
					</Style>
	          		<Style TargetType="Image">
<!--	          			<Setter Property="Width" Value="55"/>-->
<!--	          			<Setter Property="Height" Value="55"/>-->
	          			<Setter Property="Stretch" Value="Uniform"/>
	          		</Style>
	          	</Grid.Resources>
	          	
	          	<Image x:Name="Dummy" Source="\Resources\Images\CheckMark.png"
	          			Opacity="0" />
	          	
	          	<Image x:Name="CheckMark" Source="\Resources\Images\CheckMark.png"
	          			Opacity="0" />
	          	
	          	
	            <Path Visibility="Collapsed"
	                  x:Name="InderminateMark"
	                  SnapsToDevicePixels="False"
	                  StrokeThickness="5"
	                  Data="M 0 0 L 50 50">
	              <Path.Stroke>
	                <SolidColorBrush Color="Black" />
	              </Path.Stroke>
	            </Path>
	          </Grid>
	        </Border>
	      </BulletDecorator.Bullet>
	    </BulletDecorator>
	    
	    <ControlTemplate.Triggers>
	       
	        <MultiTrigger>
	            <MultiTrigger.Conditions>
	                <Condition Property="IsMouseOver" Value="True"/>                        
	                <Condition Property="IsChecked" Value="False"/>
	            </MultiTrigger.Conditions>
	            
	            <MultiTrigger.EnterActions>
	                <BeginStoryboard>
	                    <Storyboard>
	                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Dummy" To="0.3" Duration="0:0:0.1"/>
	                    </Storyboard>
	                </BeginStoryboard>                        
	            </MultiTrigger.EnterActions>
	            <MultiTrigger.ExitActions>
	                <BeginStoryboard>
	                    <Storyboard>
	                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Dummy" To="0" Duration="0:0:0.1"/>
	                    </Storyboard>
	                </BeginStoryboard>                        
	            </MultiTrigger.ExitActions>                        
	
	        </MultiTrigger>
	        
	 
	
	         <Trigger Property="IsChecked" Value="True"> 
<!--	            <Setter TargetName="CheckBorder" Property="Opacity" Value="1"/>-->
	            <Setter TargetName="CheckMark" Property="Opacity" Value="1"/>
	         </Trigger>
	         
	    
	         
	         <Trigger Property="IsChecked" Value="False"> 
<!--	            <Setter TargetName="CheckBorder" Property="Opacity" Value="0"/>-->
	            <Setter TargetName="CheckMark" Property="Opacity" Value="0"/>
	         </Trigger>                    
	        
	
	    </ControlTemplate.Triggers>
	  </ControlTemplate>


	<ControlTemplate x:Key="ExpanderToggleButton"
	                 TargetType="{x:Type ToggleButton}">
	  <Border x:Name="Border"
	          CornerRadius="10,10,0,0">
	          <Border.Resources>
	        <CornerRadius x:Key="FullyRoundedCorners" TopLeft="10" BottomLeft="10" TopRight="10" BottomRight="10"/>
	        <CornerRadius x:Key="TopRoundedCorners" TopLeft="10" BottomLeft="0" TopRight="10" BottomRight="0"/>          
	          </Border.Resources>
	            <Border.Background>
	              <LinearGradientBrush EndPoint="0.5,1"
	                                   StartPoint="0.5,0">
	                <GradientStop Color="{DynamicResource ControlLightColor}" />
	                <GradientStop Color="{DynamicResource ControlMediumColor}"
	                              Offset="1" />
	              </LinearGradientBrush>            
	            </Border.Background>          
	    <Border.BorderBrush>
	      <LinearGradientBrush StartPoint="0,0"
	                           EndPoint="0,1">
	        <LinearGradientBrush.GradientStops>
	          <GradientStopCollection>
	            <GradientStop Color="{DynamicResource BorderLightColor}"
	                          Offset="0.0" />
	            <GradientStop Color="{DynamicResource BorderDarkColor}"
	                          Offset="1.0" />
	          </GradientStopCollection>
	        </LinearGradientBrush.GradientStops>
	      </LinearGradientBrush>
	
	    </Border.BorderBrush>
	    <VisualStateManager.VisualStateGroups>
	      <VisualStateGroup x:Name="CommonStates">
	        <VisualState x:Name="Normal" />
	        <VisualState x:Name="MouseOver">
	          <Storyboard>
	            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
	                                          Storyboard.TargetProperty="(Panel.Background).
	                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
	              <EasingColorKeyFrame KeyTime="0"
	                                   Value="{StaticResource ControlMouseOverColor}" />
	            </ColorAnimationUsingKeyFrames>
	          </Storyboard>
	        </VisualState>
	        <VisualState x:Name="Pressed">
	          <Storyboard>
	            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
	                                          Storyboard.TargetProperty="(Panel.Background).
	                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
	              <EasingColorKeyFrame KeyTime="0"
	                                   Value="{StaticResource ControlPressedColor}" />
	            </ColorAnimationUsingKeyFrames>
	          </Storyboard>
	        </VisualState>
	        <VisualState x:Name="Disabled">
	          <Storyboard>
	            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
	                                          Storyboard.TargetProperty="(Panel.Background).
	                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
	              <EasingColorKeyFrame KeyTime="0"
	                                   Value="{StaticResource DisabledControlDarkColor}" />
	            </ColorAnimationUsingKeyFrames>
	            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
	                                          Storyboard.TargetProperty="(Border.BorderBrush).
	                (GradientBrush.GradientStops)[1].(GradientStop.Color)">
	              <EasingColorKeyFrame KeyTime="0"
	                                   Value="{StaticResource DisabledBorderLightColor}" />
	            </ColorAnimationUsingKeyFrames>
	          </Storyboard>
	        </VisualState>
	      </VisualStateGroup>
	      <VisualStateGroup x:Name="CheckStates">
	        <VisualState x:Name="Checked">
	          <Storyboard>
	            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
	                                           Storyboard.TargetName="CollapsedArrow">
	              <DiscreteObjectKeyFrame KeyTime="0"
	                                      Value="{x:Static Visibility.Hidden}" />
	            </ObjectAnimationUsingKeyFrames>
	            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
	                                           Storyboard.TargetName="ExpandededArrow">
	              <DiscreteObjectKeyFrame KeyTime="0"
	                                      Value="{x:Static Visibility.Visible}" />
	            </ObjectAnimationUsingKeyFrames>
	            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="CornerRadius"
	                                           Storyboard.TargetName="Border">
	              <DiscreteObjectKeyFrame KeyTime="0"
	                                      Value="{StaticResource TopRoundedCorners}" />
	            </ObjectAnimationUsingKeyFrames>                 
	       
	          </Storyboard>
	        </VisualState>
	        <VisualState x:Name="Unchecked">
	            <Storyboard>
	                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="CornerRadius"
	                                               Storyboard.TargetName="Border">
	                  <DiscreteObjectKeyFrame KeyTime="0"
	                                          Value="{StaticResource FullyRoundedCorners}" />
	                </ObjectAnimationUsingKeyFrames>        
	
	            </Storyboard>
	        </VisualState>
	        <VisualState x:Name="Indeterminate" />
	      </VisualStateGroup>
	    </VisualStateManager.VisualStateGroups>
	    <Grid>
	      <Path x:Name="CollapsedArrow"
	            HorizontalAlignment="Center"
	            VerticalAlignment="Bottom"
	            Data="M 0 0 L 4 4 L 8 0 Z">
	        <Path.Fill>
	          <SolidColorBrush Color="{DynamicResource GlyphColor}" />
	        </Path.Fill>
	      </Path>
	      <Path x:Name="ExpandededArrow"
	            HorizontalAlignment="Center"
	            VerticalAlignment="Bottom"
	            Visibility="Collapsed"
	            Data="M 0 4 L 4 0 L 8 4 Z">
	        <Path.Fill>
	          <SolidColorBrush Color="{DynamicResource GlyphColor}" />
	        </Path.Fill>
	      </Path>
	      <ContentPresenter Content="{TemplateBinding Content}"/>
	    </Grid>
	  </Border>
	</ControlTemplate>
	
      <ControlTemplate x:Key="GroupExpanderTemplate" TargetType="{x:Type Expander}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition x:Name="ContentRow"
                           Height="0" />
          </Grid.RowDefinitions>
          <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
              <VisualState x:Name="Normal" />
              <VisualState x:Name="MouseOver" />
              <VisualState x:Name="Disabled">
                <Storyboard>
                  <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                  </ColorAnimationUsingKeyFrames>
                  <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderLightColor}" />
                  </ColorAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>
            </VisualStateGroup>
            
<!--            <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ContentRow" To="0" Duration="0:0:1"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>-->
          </VisualStateManager.VisualStateGroups>
          <Border x:Name="Border"
                  Grid.Row="0"
                  CornerRadius="10,10,0,0">

            <Grid>
                                 
              <ToggleButton  
                            Template="{StaticResource ExpanderToggleButton}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                            RelativeSource={RelativeSource TemplatedParent}}"
                            >
                  <ContentPresenter Margin="4" ContentSource="Header" RecognizesAccessKey="True" />

              </ToggleButton>                                
            </Grid>
          </Border>
          <Border x:Name="Content"
                  Grid.Row="1"
                  BorderThickness="1,0,1,1"
                  CornerRadius="0,0,10,10"
                  >
            <Border.BorderBrush>
              <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
            </Border.BorderBrush>
            <Border.Background>
              <SolidColorBrush Color="{DynamicResource ContentAreaColorDark}" />
            </Border.Background>
            <ContentPresenter Margin="4" />
          </Border>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsExpanded"
                   Value="True">
            <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>



</ResourceDictionary>