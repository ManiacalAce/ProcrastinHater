//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ProcrastinHater.POCOEntities
{
    public partial class MonthlyRelativeSpecifier
    {
        #region Primitive Properties
    
        public virtual int MonthlyRelativeScheduleID
        {
            get { return _monthlyRelativeScheduleID; }
            set
            {
                if (_monthlyRelativeScheduleID != value)
                {
                    if (MonthlyRelativeSchedule != null && MonthlyRelativeSchedule.ScheduleID != value)
                    {
                        MonthlyRelativeSchedule = null;
                    }
                    _monthlyRelativeScheduleID = value;
                }
            }
        }
        private int _monthlyRelativeScheduleID;
    
        public virtual int DayType
        {
            get;
            set;
        }
    
        public virtual int Frequency
        {
            get;
            set;
        }
    
        public virtual long TimeOfDayToStartTicks
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual MonthlyRelativeSchedule MonthlyRelativeSchedule
        {
            get { return _monthlyRelativeSchedule; }
            set
            {
                if (!ReferenceEquals(_monthlyRelativeSchedule, value))
                {
                    var previousValue = _monthlyRelativeSchedule;
                    _monthlyRelativeSchedule = value;
                    FixupMonthlyRelativeSchedule(previousValue);
                }
            }
        }
        private MonthlyRelativeSchedule _monthlyRelativeSchedule;

        #endregion
        #region Association Fixup
    
        private void FixupMonthlyRelativeSchedule(MonthlyRelativeSchedule previousValue)
        {
            if (previousValue != null && previousValue.MonthlyRelativeSpecifiers.Contains(this))
            {
                previousValue.MonthlyRelativeSpecifiers.Remove(this);
            }
    
            if (MonthlyRelativeSchedule != null)
            {
                if (!MonthlyRelativeSchedule.MonthlyRelativeSpecifiers.Contains(this))
                {
                    MonthlyRelativeSchedule.MonthlyRelativeSpecifiers.Add(this);
                }
                if (MonthlyRelativeScheduleID != MonthlyRelativeSchedule.ScheduleID)
                {
                    MonthlyRelativeScheduleID = MonthlyRelativeSchedule.ScheduleID;
                }
            }
        }

        #endregion
    }
}
