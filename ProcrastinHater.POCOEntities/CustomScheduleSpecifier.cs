//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ProcrastinHater.POCOEntities
{
    public partial class CustomScheduleSpecifier
    {
        #region Primitive Properties
    
        public virtual int CustomScheduleID
        {
            get { return _customScheduleID; }
            set
            {
                if (_customScheduleID != value)
                {
                    if (SchedulingInformation != null && SchedulingInformation.ScheduleID != value)
                    {
                        SchedulingInformation = null;
                    }
                    _customScheduleID = value;
                }
            }
        }
        private int _customScheduleID;
    
        public virtual int DayOfYear
        {
            get;
            set;
        }
    
        public virtual int Year
        {
            get;
            set;
        }
    
        public virtual long TimeOfDayToStartTicks
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual SchedulingInformation SchedulingInformation
        {
            get { return _schedulingInformation; }
            set
            {
                if (!ReferenceEquals(_schedulingInformation, value))
                {
                    var previousValue = _schedulingInformation;
                    _schedulingInformation = value;
                    FixupSchedulingInformation(previousValue);
                }
            }
        }
        private SchedulingInformation _schedulingInformation;

        #endregion
        #region Association Fixup
    
        private void FixupSchedulingInformation(SchedulingInformation previousValue)
        {
            if (previousValue != null && previousValue.CustomScheduleSpecifiers.Contains(this))
            {
                previousValue.CustomScheduleSpecifiers.Remove(this);
            }
    
            if (SchedulingInformation != null)
            {
                if (!SchedulingInformation.CustomScheduleSpecifiers.Contains(this))
                {
                    SchedulingInformation.CustomScheduleSpecifiers.Add(this);
                }
                if (CustomScheduleID != SchedulingInformation.ScheduleID)
                {
                    CustomScheduleID = SchedulingInformation.ScheduleID;
                }
            }
        }

        #endregion
    }
}
